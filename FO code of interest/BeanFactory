package sg.ica.eac.common.bean;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.BeansException;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.stereotype.Component;

@Component
public class BeanFactory implements ApplicationContextAware {
	private List<ApplicationContext> applicationContexts;
	private static BeanFactory instance;

	@SuppressWarnings("squid:S2696")
	@Override
	public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
		if (applicationContext != null) {
			if (instance == null) {
				instance = this;
				instance.applicationContexts = new ArrayList<>();
			}

			instance.applicationContexts.add(applicationContext);
		}
	}

	public static BeanFactory getInstance() {
		if (instance == null) {
			throw new IllegalStateException("This factory must be initialized by Spring!");
		}

		return instance;
	}
	
	
	//the beans declared are identified by class instead, cannot retrieve by full name or short name
	public <C> Object findBean(Class<C> name) {
		if (this.applicationContexts == null) {
			throw new IllegalStateException("This factory must be initialized by Spring!");
		}

		RuntimeException re = null;

		for (ApplicationContext applicationContext : this.applicationContexts) {
			try {
				Object o = applicationContext.getBean(name);
				if (o != null) {
					return o;
				}
			} catch (RuntimeException e) {
				re = e;
			}
		}

		if (re != null) {
			throw re;
		}

		return null;
	}
}
